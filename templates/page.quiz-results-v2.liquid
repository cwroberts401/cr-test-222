<div id="loader" class="loader"></div>


<script>
    document.addEventListener('DOMContentLoaded', function() {
    const urlParams = new URLSearchParams(window.location.search);
    const productHandles = urlParams.get('product_handles').split(',');
    const showHero = urlParams.get('show_hero') === 'true';
    const hideOOS = urlParams.get('hide_oos') === 'true';
    const rowLength = parseInt(urlParams.get('row_length'), 10) || 3;

    const productsContainer = document.getElementById('products-container');
    const loader = document.getElementById('loader'); // Get the loader element
    productsContainer.style.flexBasis = `calc(100% / ${rowLength} - 20px)`; // Adjust grid based on row length

    let productsLoaded = 0; // Counter to track loaded products

    productHandles.forEach((handle, index) => {
        fetch(`/products/${handle}.js`)
            .then(response => response.json())
            .then(product => {
                if (!product.available && hideOOS) {
                    return; // Skip out of stock products if hideOOS is true
                }

                const productCard = document.createElement('div');
                productCard.className = 'product-card';
                productCard.innerHTML = `
                    <a href="/products/${product.handle}">
                        <img src="${product.images[0]}" alt="${product.title}" style="width: 100%;">
                        <h2>${product.title}</h2>
                        <p>${product.variants[0].price}</p>
                    </a>
                `;
                if (index === 0 && showHero) {
                    productCard.classList.add('hero-product');
                }

                productsContainer.appendChild(productCard);
                productsLoaded++;

                if (productsLoaded === productHandles.length) {
                    loader.style.display = 'none'; // Hide loader when all products are loaded
                }
            })
            .catch(error => {
                console.error('Error loading product:', handle, error);
                productsLoaded++;
                if (productsLoaded === productHandles.length) {
                    loader.style.display = 'none'; // Hide loader on error too
                }
            });
    });
});

</script>

<style>
  .loader {
    position: fixed;
    left: 50%;
    top: 50%;
    width: 50px;
    height: 50px;
    background-color: #f3f3f3;
    border-radius: 50%;
    border-top: 5px solid blue;
    animation: spin 1s linear infinite;
}

@keyframes spin {
    0% { transform: rotate(0deg); }
    100% { transform: rotate(360deg); }
}
</style>