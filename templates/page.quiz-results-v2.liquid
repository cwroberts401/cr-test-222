<!-- Loader and Products Container -->
<div id="loader" class="loader"></div>
<div id="products-container" class="product-grid"></div>

<!-- Add All to Cart Button -->
<button id="addAllToCart" style="margin: 20px; display: none;">Add All to Cart</button>

<script>
document.addEventListener('DOMContentLoaded', function() {
    const urlParams = new URLSearchParams(window.location.search);
    const productHandles = urlParams.get('product_handles').split(',');
    const rowLength = parseInt(urlParams.get('row_length'), 10) || 3;
    const hideOos = urlParams.get('hide_oos');


    const productsContainer = document.getElementById('products-container');
    const loader = document.getElementById('loader');
    const addAllToCartButton = document.getElementById('addAllToCart');

    let allVariantIds = []; // To store all first variant ids for the add all to cart functionality

    productHandles.forEach((handle, index) => {
        fetch(`/products/${handle}.js`)
            .then(response => response.json())
            .then(product => {
                if (!product.available && hideOos === "true") {
                    return; // Optionally skip out of stock products
                }

                const productCard = document.createElement('div');
                productCard.className = 'product-card';

                if (product.variants.length > 1){
                  let variantsDropdown = `<select>`;
                    product.variants.forEach(variant => {
                    variantsDropdown += `<option value="${variant.id}">${variant.title}</option>`;
                  });
                  variantsDropdown += `</select>`;
                }


                productCard.innerHTML = `
                    <a href="/products/${product.handle}">
                        <img src="${product.images[0]}" alt="${product.title}" style="width: 100%;">
                    </a>
                    <h2>${product.title}</h2>
                    <p>${product.variants[0].price}</p>
                    ${variantsDropdown}
                    <button onclick="addToCart('${product.variants[0].id}')">Add to Cart</button>
                `;

                productsContainer.appendChild(productCard);
                allVariantIds.push(product.variants[0].id); // Assume adding the first variant by default

                if (index === productHandles.length - 1) {
                    loader.style.display = 'none';
                    addAllToCartButton.style.display = 'block'; // Show add all to cart button once all products are loaded
                }
            })
            .catch(error => {
                console.error('Error loading product:', handle, error);
            });
    });

    addAllToCartButton.addEventListener('click', function() {
        allVariantIds.forEach(id => {
            fetch('/cart/add.js', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    items: allVariantIds.map(id => ({ id: id, quantity: 1 }))
                })
            })
            .then(response => response.json())
            .then(data => console.log('All items added', data))
            .catch(error => console.error('Error adding items to cart:', error));
        });
    });
});

function addToCart(variantId) {
    fetch('/cart/add.js', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json'
        },
        body: JSON.stringify({
            id: variantId,
            quantity: 1
        })
    })
    .then(response => response.json())
    .then(data => alert('Added to cart!'))
    .catch(error => console.error('Error adding item to cart:', error));
}
</script>


<style>
  .loader {
    position: fixed;
    left: 50%;
    top: 50%;
    transform: translate(-50%, -50%);
    width: 50px;
    height: 50px;
    background-color: #f3f3f3;
    border-radius: 50%;
    border-top: 5px solid blue;
    animation: spin 1s linear infinite;
}
.product-grid {
    display: flex;
    flex-wrap: wrap;
    margin-top: 20px;
}
.product-card {
    margin: 10px;
    flex-grow: 1;
    flex-basis: calc(100% / 3 - 20px); /* Default to 3 products per row */
}
.hero-product {
    font-size: 24px;
    color: red;
}

@keyframes spin {
    0% { transform: rotate(0deg); }
    100% { transform: rotate(360deg); }
}
</style>